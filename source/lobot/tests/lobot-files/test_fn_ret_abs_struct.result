TestResult
  { lastKind =
      Kind
        { kindName = "abs_struct_test"
        , kindType = IntRepr
        , kindFunctionEnv =
            [ FunctionTypeRepr
                { functionName = write_int_to_file
                , functionArgTypes = [ IntRepr , AbsRepr filepath ]
                , functionRetType =
                    StructRepr
                      [ FieldRepr { fieldName = f , fieldType = AbsRepr filepath }
                      , FieldRepr { fieldName = x , fieldType = IntRepr }
                      ]
                }
            , FunctionTypeRepr
                { functionName = read_int_from_file
                , functionArgTypes = [ AbsRepr filepath ]
                , functionRetType = IntRepr
                }
            , FunctionTypeRepr
                { functionName = tmp_file
                , functionArgTypes = []
                , functionRetType = AbsRepr filepath
                }
            ]
        , kindConstraints =
            [ AndExpr
                (LteExpr (LiteralExpr (IntLit 1)) (VarExpr 0))
                (LteExpr (VarExpr 0) (LiteralExpr (IntLit 3)))
            , EqExpr
                (FieldExpr (ApplyExpr 0 [ VarExpr 0 , ApplyExpr 2 [] ]) 1)
                (VarExpr 0)
            ]
        }
  , instances = [ [ IntLit 1 ] , [ IntLit 2 ] , [ IntLit 3 ] ]
  }