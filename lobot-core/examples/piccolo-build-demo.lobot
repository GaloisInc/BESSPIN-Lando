-- Definition of all RISC-V ISA instances.
riscv : kind of struct
  with reg_width : {RV32, RV64}
       exts : subset {M, A, F, D, C}
       privs : subset {M, S, U}
       vm : {SVNone, SV32, SV39, SV48}
  where (D in exts) => (F in exts)
        M in privs
        (S in privs) => (U in privs)
        (S in privs) => (vm /= SVNone)
        (S notin privs) => (vm = SVNone)

-- Definition of a bluespec build configuration, which contains a riscv.
bluespec_config : kind of struct
  with riscv : riscv
       sim : {Bluesim, IVerilog, Verilator}
       debug : bool
       tv : bool
  where M in riscv.exts
        M in riscv.privs
        U in riscv.privs
        S in riscv.privs => riscv.vm = SV39

-- Abstract type for a simulator (under the hood, a path to the simulator
-- executable).
abstract type simulator

-- Function for building a simulator from a bluespec config. This calls out to
-- bsc by converting the config to a bunch of command-line flags, and returns
-- the path to the generated simulator.
abstract build_piccolo : bluespec_config -> simulator

-- Abstract type for a RISC-V binary (under the hood, a path to the binary).
abstract type riscv_program

-- Runs a RISC-V ISA test on a simulator and returns whether the test
-- passed or not.
abstract run_isa_test : (simulator, riscv_program) -> bool

-- Each RISC-V configuration might have a different number of compliance tests.
abstract num_isa_tests : riscv -> int
-- Returns a particular ISA test.
abstract get_isa_test : (riscv, int) -> riscv_program


piccolo_build_check : check
  on cfg : bluespec_config
     test_id : int
  where 1 <= test_id
        test_id <= num_isa_tests(cfg.riscv)
        cfg.riscv.reg_width = RV32
        cfg.riscv.exts = {M}
        cfg.riscv.privs = {M, U}
        cfg.sim = IVerilog
        cfg.debug = false
        cfg.tv = false
  that run_isa_test(build_piccolo(cfg), get_isa_test(cfg.riscv, test_id))